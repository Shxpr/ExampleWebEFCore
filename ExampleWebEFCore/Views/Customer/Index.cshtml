@{
    List<NavModel> navModels = new List<NavModel>();
    navModels.Add(new NavModel
            {
                IsActive = false,
                IsHidden = false,
                Text = "Home"
            });

    navModels.Add(new NavModel
            {
                IsActive = false,
                IsHidden = true,
                Text = "Business"
            });

    navModels.Add(new NavModel
            {
                IsActive = false,
                IsHidden = true,
                Text = "Invoice"
            });

    navModels.Add(new NavModel
            {
                IsActive = true,
                IsHidden = false,
                Text = "Customer"
            });
    GridViewModel<object> customerGv = new GridViewModel<object>();
    customerGv.Columns = new List<string>();
    customerGv.StyleHeader = "table table-striped table-bordered";
    customerGv.Columns.Add("Id");
    customerGv.Columns.Add("Name");
    customerGv.Columns.Add("Last Name");
    var data = new List<CustomerModel>();
    data.Add(new CustomerModel { Id = 1, Name = "Test 1", LastName = "Test 1" });
    data.Add(new CustomerModel { Id = 2, Name = "Test 2", LastName = "Test 2" });
    data.Add(new CustomerModel { Id = 3, Name = "Test 3", LastName = "Test 3" });
    customerGv.Data = data.Cast<object>().ToList();

    List<ButtonModel> buttonModels = new List<ButtonModel>();
    buttonModels.Add(new ButtonModel { Action = "New", Controller = "Customer", StyleButton = EnumButtonCss.Success, Text = "New Customer" });
    buttonModels.Add(new ButtonModel { Action = "Delete", Controller = "Customer", StyleButton = EnumButtonCss.Danger, Text = "Delete Customer" });
}

@await Component.InvokeAsync(typeof(NavViewComponent), navModels);
@await Component.InvokeAsync(typeof(GridViewComponent), customerGv);
@await Component.InvokeAsync(typeof(GvButtonViewComponent), buttonModels)

